---
- name: Ensure required packages are present
  ansible.builtin.package:
    name: curl
    state: present
  become: true
  become_user: "root"

- name: Helper variable for sourcing nvm
  ansible.builtin.set_fact:
    nodejs_src_nvm: "source {{ nodejs_nvm_dir }}"

- name: Ensure NVM directory exists
  ansible.builtin.file:
    path: "{{ nodejs_nvm_dir }}"
    state: directory
    owner: "{{ 'root' if nodejs_shared else nodejs_user }}"
    group: "{{ 'root' if nodejs_shared else nodejs_user_group }}"
    mode: '0755'
  become: true

- name: Check if nvm is installed
  ansible.builtin.command: bash -c "command -v nvm"
  register: nvm_installed
  ignore_errors: true
  changed_when: false
  failed_when: false

- name: Check if nvm needs install
  ansible.builtin.set_fact:
    nvm_needs_build: "{{ nvm_installed.rc != 0 or nodejs_force_install }}"

- name: Download NVM install script
  ansible.builtin.get_url:
    url: "{{ nodejs_nvm_install_url }}"
    dest: "/tmp/nvm-install.sh"
    mode: "0755"
    force: true
  become: true
  become_user: "{{ nodejs_user }}"

- name: Run NVM install script
  ansible.builtin.command: /tmp/nvm-install.sh
  environment:
    nodejs_nvm_dir: "{{ nodejs_nvm_dir }}"
  become: true
  become_user: "{{ nodejs_user }}"
  args:
    creates: "{{ nodejs_nvm_dir }}/nvm.sh"
  when: nvm_needs_build

- name: Check if Node.js is installed
  ansible.builtin.command: bash -c "{{ nodejs_src_nvm }} && command -v node"
  register: node_check
  changed_when: false
  failed_when: false

- name: Check if nvm needs install
  ansible.builtin.set_fact:
    nodejs_needs_build: "{{ node_check.rc != 0 or nodejs_force_install }}"

- name: Print Node.js status
  ansible.builtin.debug:
    msg: "Node.js is already installed at {{ node_check.stdout }}"
  when: node_check.rc == 0

- name: Install Node.js {{ nodejs_version }} with NVM
  ansible.builtin.shell: |
    {{ nodejs_src_nvm }} &&
    nvm install {{ nodejs_version }} &&
    nvm alias default {{ nodejs_version }} &&
    nvm use default
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ nodejs_user }}"
  ignore_errors: true
  failed_when: false
  register: _node_install
  changed_when: _node_install.rc == 0
  when: nodejs_needs_build
