---
miniforge3_force_build: false
miniforge3_user: "{{ ansible_user_id }}"
miniforge3_prefix: "~{{ miniforge3_user }}/miniforge3"

# Installers are not released for every version of conda, you can use this to
# `conda install conda={{ miniforge3_version }}` a specific version of conda. If set to `latest` then the role will
# perform a `conda update conda` instead.
miniforge3_version: latest

# If you wish to install e.g. a conda-forge version of conda you can do so by setting channels. This causes
# `--override-channels --channel <channel> [--channel <channel> ...]` to be specified on the call to
# `conda install conda...` or `conda update conda`.
miniforge3_channels: []

# Use a specific installer version and python version. The default is to use the latest installer. If you specify a
# version, it must exist in https://repo.anaconda.com/miniconda/
#
# The Python major and minor version e.g. '3.9' (or '39') of the installer
miniforge3_installer_python: null
# The conda version of the installer
miniforge3_installer_version: latest

# List packages to install into conda's base environment
# e.g.
# miniforge3_base_env_packages: ['mamba']
miniforge3_base_env_packages: []

# Create environments using the provided description. e.g.:
#
# miniforge3_conda_environments:
#   python@3.9:
#     channels:  # optional, defaults to miniforge3_channels
#       - conda-forge
#       - defaults
#     packages:
#       - python=3.9
miniforge3_conda_environments: {}

# You generally should not need to set these yourself
#
# ansible_distribution is 'MacOSX' if ansible_system is 'Darwin'
# ansible_system is 'Linux' on Linux
miniforge3_installer_arch: "{{ ansible_architecture }}"
# The installer filename on https://repo.anaconda.com/miniconda/ to fetch and run
miniforge3_installer: >-
  Miniforge3-{{ ansible_system }}-{{ ansible_architecture }}.sh

miniforge3_download_url: >-
  https://github.com/conda-forge/miniforge/releases/latest/download/{{ miniforge3_installer }}

# The shell to call the downloaded installer script with
miniforge3_installer_shell: /bin/sh
