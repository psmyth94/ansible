---
- name: Update package cache
  ansible.builtin.package:
    update_cache: true
    cache_valid_time: 86400
  become: true
  become_user: "root"

- name: Install tmux, git, etc.
  ansible.builtin.package:
    name:
      - tmux
      - git
    state: present
  become: true
  become_user: "root"

- name: Check if directory is empty
  find:
    paths: "{{ tmux_install_dir }}"
    hidden: true
  register: dir_contents

- name: Create directory for oh-my-tmux
  ansible.builtin.file:
    path: "{{ tmux_install_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ tmux_user }}"
    group: "{{ tmux_user_group }}"
  become: true
  become_user: "{{ tmux_user }}"
  when:
    - tmux_install_dir is not none
    - dir_contents.matched == 0


- name: Clone oh-my-tmux repository
  ansible.builtin.git:
    repo: "{{ tmux_repo_url }}"
    dest: "{{ tmux_install_dir }}"
    version: "{{ tmux_repo_version }}"
    update: true
    force: true
  become: true
  become_user: "{{ tmux_user }}"
  register: tmux_register_clone
  when:
    - tmux_install_dir is not none
    - dir_contents.matched == 0

- name: Check if cargo is installed
  ansible.builtin.command: bash -c "command -v cargo"
  register: cargo_check
  changed_when: false

- name: Download cargo
  ansible.builtin.get_url:
    url: "https://sh.rustup.rs"
    dest: "/tmp/rustup.sh"
    mode: '0755'
  become: true
  become_user: "root"
  when: cargo_check.rc != 0

- name: Install cargo
  ansible.builtin.command: bash -c "/tmp/rustup.sh -y"
  args:
    creates: /usr/local/cargo/bin/cargo
  become: true
  become_user: "root"
  when: cargo_check.rc != 0

- name: Install tmux sessionizer
  community.general.cargo:
    name: tmux-sessionizer
    state: present
  become: true
  become_user: "{{ tmux_user }}"
