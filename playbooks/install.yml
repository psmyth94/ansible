---
- name: Bootstrap Development Environment
  hosts: localhost
  gather_facts: true
  become: true
  become_user: "{{ dotfiles_user }}"

  vars_prompt:
    - name: ansible_neovim_force_build
      prompt: "Do you want to force building Neovim from source even if installed already? (y/n)"
      private: false
      default: n
    - name: default_zsh
      prompt: "Do you want to make Zsh the default shell (y/n)"
      private: false
      default: y
    - name: install_oh_my_zsh
      prompt: "Do you want to install Oh-My-Zsh? (y/n)"
      private: false
      default: y
    - name: install_tmux
      prompt: "Do you want to install Tmux? (y/n)"
      private: false
      default: y
    - name: install_oh_my_tmux
      prompt: "Do you want to install Oh-My-Tmux? (y/n)"
      private: false
      default: y
    - name: install_docker
      prompt: "Do you want to install Docker? (y/n)"
      private: false
      default: n
    - name: install_r
      prompt: "Do you want to install R? (y/n)"
      private: false
      default: n
    - name: install_go
      prompt: "Do you want to install Go? (y/n)"
      private: false
      default: n
    - name: install_k3s
      prompt: "Do you want to install K3s? (y/n)"
      private: false
      default: n
    - name: install_conda
      prompt: "Do you want to install Conda? (y/n)"
      private: false
      default: n

  vars:
    dotfiles_repo: "{{ dotfiles_repo | default('') }}"
    dotfiles_dir: "~{{ dotfiles_user }}/.dotfiles"
    dotfiles_version: "{{ dotfiles_version | default('main') }}"
  tasks:
    - name: Install geerlingguy.docker
      community.general.ansible_galaxy_install:
        type: role
        name: "geerlingguy.docker"
        force: true
      when: install_docker == 'y'

    - name: Install geerlingguy.go
      community.general.ansible_galaxy_install:
        type: role
        name: geerlingguy.go
        force: true
      when: install_go == 'y'

    - name: Install robertdebock.cargo
      community.general.ansible_galaxy_install:
        type: role
        name: robertdebock.cargo
        force: true

    - name: Install xanmanning.k3s
      community.general.ansible_galaxy_install:
        type: role
        name: xanmanning.k3s
        force: true
      when: install_k3s == 'y'

    - name: Setup Dotfiles
      ansible.builtin.git:
        repo: "{{ dotfiles_repo }}"
        dest: "{{ dotfiles_dir }}"
        version: "{{ dotfiles_version }}"
        update: true
        recursive: true
        track_submodules: true
        force: true

    - name: Setup sshkey
      ansible.builtin.include_role:
        name: sshkey
      vars:
        sshkey_user: "{{ dotfiles_user }}"

    - name: Setup Neovim
      ansible.builtin.include_role:
        name: neovim
      vars:
        neovim_user: "{{ dotfiles_user }}"
        neovim_force_build: "{{ ansible_neovim_force_build == 'y' }}"
        neovim_dotfiles_dir: "{{ dotfiles_dir }}"
      tags:
        - install
        - configure
        - github-copilot

    - name: Setup Zsh with Oh-My-Zsh
      ansible.builtin.include_role:
        name: oh-my-zsh
      vars:
        oh_my_zsh_user: "{{ dotfiles_user }}"
      when: install_oh_my_zsh == 'y'

    - name: Setup WSL Clipboard Support if on WSL
      ansible.builtin.include_role:
        name: wsl_clipboard_support

    - name: Setup Node.js
      ansible.builtin.include_role:
        name: nodejs
      vars:
        nodejs_user: "{{ dotfiles_user }}"

    - name: Setup Tmux with Oh-My-Tmux
      ansible.builtin.include_role:
        name: tmux
      vars:
        tmux_user: "{{ dotfiles_user }}"
      when:
        - install_tmux == 'y'
        - install_oh_my_tmux == 'y'

    - name: Setup Go
      ansible.builtin.include_role:
        name: geerlingguy.go
      when: install_go == 'y'

    - name: Setup Cargo
      ansible.builtin.include_role:
        name: robertdebock.cargo
      vars:
        ansible_become: true
        ansible_become_user: root

    - name: Setup Docker
      ansible.builtin.include_role:
        name: geerlingguy.docker
      when: install_docker == 'y'

    - name: Setup K3s
      ansible.builtin.include_role:
        name: xanmanning.k3s
      when: install_k3s == 'y'

    - name: Setup Conda
      ansible.builtin.include_role:
        name: miniforge3
      when: install_conda == 'y'

    - name: Setup R
      ansible.builtin.package:
        name: r-base
        state: present
      when: install_r == 'y'
